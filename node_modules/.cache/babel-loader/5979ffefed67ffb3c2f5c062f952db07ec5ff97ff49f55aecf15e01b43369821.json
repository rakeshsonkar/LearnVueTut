{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Test the Templete view\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"h2\", null, _toDisplayString($data.name), 1 /* TEXT */), _createElementVNode(\"h3\", null, _toDisplayString($data.a + $data.b), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.updateText && $options.updateText(...args))\n  }, \" click me\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_hoisted_1","_toDisplayString","$data","name","a","b","onClick","_cache","args","$options","updateText"],"sources":["C:\\Users\\DELL\\Desktop\\vue\\blog\\src\\components\\Test\\TemplateView.vue"],"sourcesContent":["<template>\r\n   <h1>Test the Templete  view</h1> \r\n   <h2>{{ name }}</h2>\r\n   <h3>{{ a+b }}</h3>\r\n   <button v-on:click=\"updateText\"> click me</button>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name:'TemplateView',\r\n    data(){\r\n        return{\r\n            name:'rakesh',\r\n            a:10,\r\n            b:20\r\n        }\r\n    }\r\n    ,methods:{\r\n        updateText(){\r\n            this.name=\"peter\"\r\n        }\r\n    }\r\n}\r\n</script>"],"mappings":";gCACGA,mBAAA,CAAgC,YAA5B,wBAAuB;;6DAA3BC,UAAgC,EAChCD,mBAAA,CAAmB,YAAAE,gBAAA,CAAZC,KAAA,CAAAC,IAAI,kBACXJ,mBAAA,CAAkB,YAAAE,gBAAA,CAAXC,KAAA,CAAAE,CAAC,GAACF,KAAA,CAAAG,CAAC,kBACVN,mBAAA,CAAkD;IAArCO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;KAAE,WAAS,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}