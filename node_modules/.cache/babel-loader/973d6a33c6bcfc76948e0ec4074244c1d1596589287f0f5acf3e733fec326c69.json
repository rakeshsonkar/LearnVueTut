{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [$data.show ? (_openBlock(), _createElementBlock(\"h1\", _hoisted_1, \"Conditional Rendering in vue js\")) : (_openBlock(), _createElementBlock(\"h1\", _hoisted_2, \"Conditional Rendering in vue js else\")), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.display && $options.display(...args))\n  }, \"toggle Element\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["$data","show","_createElementBlock","_hoisted_1","_hoisted_2","_createElementVNode","onClick","_cache","args","$options","display"],"sources":["C:\\Users\\DELL\\Desktop\\vue\\blog\\src\\components\\IFELSEHIDESHOW.vue"],"sourcesContent":["<template>\r\n    <h1 v-if=\"show\">Conditional Rendering in vue  js</h1>\r\n    <h1 v-else>Conditional Rendering in vue  js else</h1>\r\n    <button v-on:click=\"display\">toggle Element</button>\r\n    \r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name:\"IFELSHIDESH\",\r\n    data(){\r\n        return {show:false}\r\n    },\r\n    methods:{\r\n       display(){\r\n     \r\n        this.show=!this.show\r\n       } \r\n    }\r\n}\r\n</script>"],"mappings":";;;;;;;;6DACcA,KAAA,CAAAC,IAAI,I,cAAdC,mBAAA,CAAqD,MAAAC,UAAA,EAArC,iCAAgC,M,cAChDD,mBAAA,CAAqD,MAAAE,UAAA,EAA1C,sCAAqC,IAChDC,mBAAA,CAAoD;IAAvCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;KAAE,gBAAc,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}